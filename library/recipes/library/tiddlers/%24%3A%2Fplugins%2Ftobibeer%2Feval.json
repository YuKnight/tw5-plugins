{
    "title": "$:/plugins/tobibeer/eval",
    "description": "Evaluate expressions, compute and compare tiddler properties and data",
    "author": "Tobias Beer",
    "version": "0.6.9 BETA",
    "core-version": ">=5.1.9",
    "source": "https://github.com/tobibeer/tw5-eval",
    "documentation": "https://tobibeer.github.io/tw5-plugins#eval",
    "plugin-type": "plugin",
    "requires": "",
    "list": "readme filter widget",
    "dependents": "",
    "type": "application/json",
    "text": "{\n    \"tiddlers\": {\n        \"$:/plugins/tobibeer/eval/filter\": {\n            \"title\": \"$:/plugins/tobibeer/eval/filter\",\n            \"text\": \"```\\r\\neval:<suffix>[<expression>]\\n\\n{{{ 1 2 +[eval:$eq[\\r\\n{!!title} + value \\\\\\r\\ninit: 10 \\\\\\r\\nfinal: value / 100\\r\\n]] }}}\\r\\n```\\n\\n; `<expression>`\\r\\n: declare an expression, plus variables and options as `name:value`, split via `\\\\`\\r\\n; runtime variables\\r\\n: value, title\\r\\n; special variables\\r\\n: init, final\\r\\n; options\\r\\n: format, current, lib\\r\\n; custom variables\\r\\n: use simple word-titles\\r\\n; `<suffix>`\\r\\n: optional mode, prefixed $\\r\\n; $\\r\\n: any input titles with truthy value\\r\\n; $all\\r\\n: all input titles, if one has truthy value\\r\\n; $val\\r\\n: values\\r\\n; $expr\\r\\n: expressions\\r\\n; $eq\\r\\n: equations\"\n        },\n        \"$:/plugins/tobibeer/eval/filters/eval.js\": {\n            \"title\": \"$:/plugins/tobibeer/eval/filters/eval.js\",\n            \"text\": \"/*\\\\\\r\\ntitle: $:/plugins/tobibeer/eval/filters/eval.js\\r\\ntype: application/javascript\\r\\nmodule-type: filteroperator\\r\\n\\r\\na filter to compute and compare numbers, booleans and dates\\r\\n\\r\\n@preserve\\r\\n\\\\*/\\r\\n(function(){\\\"use strict\\\";var e=require(\\\"$:/plugins/tobibeer/eval/lib.js\\\"),i=e.getLibrary(\\\"$:/plugins/tobibeer/eval/libraries\\\");if(i&&i.jsWarning){console.log(\\\"Warning eval filter: no math.js found, running in javascript eval mode!\\\")}exports.eval=function(e,r,t){var n,l,a,f,s,u,o,d,p={},c={not:[]},v=t.widget,b=v?v.getVariable(\\\"currentTiddler\\\"):\\\"\\\",g=/^\\\\s*([\\\\w\\\\d\\\\/]*):(.*)(?:\\\\s*)$/,m=/^\\\\s*\\\\$([\\\\w]*)(?:\\\\s*)$/,x=t.wiki;try{s=m.exec(r.suffix||\\\"\\\");if(s&&!u){u=s[1]?s[1]:\\\"any\\\";c[u]=[]}$tw.utils.each((r.operand||\\\"\\\").split(\\\"\\\\\\\\\\\"),function(e){if(e){s=g.exec(e);if(s){p[s[1]]=s[2]}else if(l===undefined){l=e}}});if(p.lib){f=p.lib.trim().split(\\\" \\\");p.lib=x.getLibrary({type:f[0],id:f[1]?f[1]:undefined})}else{p.lib=i}if(!p.lib||!p.lib.eval){throw\\\"No suitable library configured.\\\"}l=l||\\\"\\\";$tw.utils.each(Object.keys(p),function(e){if([\\\"current\\\",\\\"if\\\",\\\"final\\\",\\\"format\\\",\\\"lib\\\"].indexOf(e)<0){n=x.parseExpressionReferences(p[e],{widget:v,tiddler:b});d=p.lib.eval(n);p[e]=d===undefined?0:d}});if(p.format){if(i.format){if(p.format.indexOf(\\\":\\\")>=0){a=(\\\"{\\\"+p.format+\\\"}\\\").replace(/[\\\\'\\\\\\\"]/g,'\\\"').replace(/(\\\\w+):/g,'\\\"$1\\\":');p.format=JSON.parse(a)}}else{p.format=undefined}}p.value=p.init===undefined?0:p.init;if(!p.count){p.count=0}if(l||p.value||p.final!==undefined){e(function(e,r){p.count++;p.title=r;var t=p.current?p.current.replace(/%title%/gm,p.title):\\\"\\\";n=x.parseExpression(l,{widget:v,tiddler:r,vars:p,title:r,references:true});d=p.lib.eval(n.trim());p.value=d;if(p.format&&(c.val||c.eq)){d=d?i.format(d,p.format):d}if(c.val){c.val.push(d+t)}if(d){if(c.any){c.any.push(r)}}else{c.not.push(r)}if(c.all){c.all.push(r)}if(c.expr){c.expr.push(n+t)}if(c.eq){c.eq.push(n+\\\" = \\\"+d+t)}});if(p.final!==undefined){n=x.parseExpression(p.final,{widget:v,tiddler:b,vars:p,title:\\\"\\\",references:true});p.value=d=p.lib.eval(n);if(c.expr){c.expr.push(n)}if(c.eq){c.eq.push(n+\\\" = \\\"+d)}}}else{p.value=\\\"false\\\"}if(u){o=c[u]}else{d=(p.format?i.format(p.value,p.format):p.value).toString();o=[d]}if(p.if!==undefined){n=x.parseExpression(p.if,{widget:v,tiddler:b,vars:p,references:true});d=p.lib.eval(n);if(p.value.toString()!==(d===undefined?\\\"\\\":d).toString()){return[]}}}catch(n){return[\\\"Error in eval filter:\\\\n\\\"+n]}return o}})();\",\n            \"type\": \"application/javascript\",\n            \"module-type\": \"filteroperator\"\n        },\n        \"$:/plugins/tobibeer/eval/lib.js\": {\n            \"title\": \"$:/plugins/tobibeer/eval/lib.js\",\n            \"text\": \"/*\\\\\\r\\ntitle: $:/plugins/tobibeer/eval/lib.js\\r\\ntype: application/javascript\\r\\nmodule-type: wikimethod\\r\\n\\r\\nProvides library handling to wiki object.\\r\\n\\r\\n@preserve\\r\\n\\\\*/\\n(function(){\\\"use strict\\\";exports.getLibrary=function(e){if(typeof e===\\\"string\\\"){e={config:e}}else if(typeof e!==\\\"object\\\"){return}var i,r,l,t=$tw.wiki,a=e.config,o=e.type,s=e.id;if(!t.libraries){t.libraries=Object.create(null);t.libraryConfigs=Object.create(null)}if(a||o){if(a){i=t.libraryConfigs[a];if(i){$tw.utils.each(i,function(e){if(!o&&!s||o===e.type&&!s||o===e.type&&s===e.id){l=t.libraries[e.type].loaded[e.id];return false}})}else{r=$tw.wiki.getTiddler(e.config);t.libraryConfigs[a]=[];JSON.parse(r?r.getFieldString(\\\"text\\\"):\\\"[]\\\").map(function(e){var i,r=e.id,l=e.type;try{if(l===\\\"js\\\"){if(!r){e.id=r=\\\"js/eval\\\"}i={eval:eval,type:l,id:r}}else{if(!r){e.id=r=l}if(t.getTiddler(e.require)){i=require(e.require)}else{return}}if(!t.libraries[l]){t.libraries[l]={loaded:Object.create(null),primary:r}}if(i.id===\\\"js/eval\\\"){i.jsWarning=true}t.libraries[l].loaded[r]=i;t.libraryConfigs[a].push(e);if(!o){o=l}}catch(s){console.log(s)}})}}if(!l){if(o){if(o&&!t.libraries[o]){console.log(\\\"No '\\\"+o+\\\"' library loaded for use with tobibeer/eval!\\\")}else{l=t.libraries[o].loaded[s||t.libraries[o].primary]}}else{console.log(\\\"Could not load any library configured for tobibeer/eval!\\\\n\\\"+\\\"Install tobibeer/math.js or enable js eval.\\\")}}}return l}})();\",\n            \"type\": \"application/javascript\",\n            \"module-type\": \"wikimethod\"\n        },\n        \"$:/plugins/tobibeer/eval/libraries\": {\n            \"title\": \"$:/plugins/tobibeer/eval/libraries\",\n            \"type\": \"application/json\",\n            \"text\": \"[\\r\\n\\t{\\\"type\\\":\\\"math.js\\\", \\\"require\\\": \\\"$:/lib/math.js\\\"},\\r\\n\\t{\\\"type\\\":\\\"math.js\\\", \\\"id\\\":\\\"mklauber/math.js\\\", \\\"require\\\":\\\"$:/plugins/mklauber/math.js/math.js\\\"}\\r\\n]\"\n        },\n        \"$:/plugins/tobibeer/eval/readme\": {\n            \"title\": \"$:/plugins/tobibeer/eval/readme\",\n            \"text\": \"This plugin allows you to compute and compare tiddler propeties using...\\n\\n; eval[&lt;expression>]\\r\\n: a ''filter'' evaluating an expression in the operand\\r\\n; &lt;$eval>{&#123;!!count}} + 1&lt;/eval>\\r\\n: a ''widget'' evaluating it's content as an expression\\n\\n<br>\\n\\n; documentation / examples / demos...\\r\\n: http://tobibeer.github.io/tw5-plugins#eval\\r\\n; configuration\\r\\n: $:/plugins/tobibeer/eval/libraries (see documentation)\"\n        },\n        \"$:/plugins/tobibeer/eval/widget\": {\n            \"title\": \"$:/plugins/tobibeer/eval/widget\",\n            \"text\": \"Evaluates inner content as expression.\\n\\n```\\r\\n<$eval lib=\\\"js\\\">1 + {{!!count}}</$eval>\\r\\n```\\n\\n!! Attributes\\n\\n; lib\\r\\n: library to use for evaluation\\r\\n; undefined\\r\\n: output if result is undefined\\r\\n; quiet\\r\\n: if `true` => no verbose errors\"\n        },\n        \"$:/plugins/tobibeer/eval/widgets/eval.js\": {\n            \"title\": \"$:/plugins/tobibeer/eval/widgets/eval.js\",\n            \"text\": \"/*\\\\\\r\\ntitle: $:/plugins/tobibeer/eval/widgets/eval.js\\r\\ntype: application/javascript\\r\\nmodule-type: widget\\r\\n\\r\\nRenders evaluated output\\r\\n\\r\\n@preserve\\r\\n\\\\*/\\r\\n(function(){\\\"use strict\\\";var e=require(\\\"$:/plugins/tobibeer/eval/lib.js\\\"),t=e.getLibrary({config:\\\"$:/plugins/tobibeer/eval/libraries\\\"});var i=require(\\\"$:/core/modules/widgets/widget.js\\\").widget;var r=function(e,t){this.initialise(e,t)};r.prototype=new i;r.prototype.render=function(i,r){this.parentDomNode=i;this.computeAttributes();this.execute();var n,s,d=t,u=this.document.createElement(\\\"div\\\");this.renderChildren(u);n=(u.textContent||u.innerText).trim();if(this.library){d=e.getLibrary({type:this.library})}try{s=d.eval(n)}catch(h){if(!this.quiet&&!this.undefined){s=\\\"Unable to evaluate '\\\"+n+\\\"' (\\\"+h+\\\").\\\"}}if(this.undefined!==undefined&&(s===undefined||s===\\\"undefined\\\")){s=this.undefined}var o=this.document.createTextNode(s);i.insertBefore(o,r);this.domNodes.push(o)};r.prototype.execute=function(){this.quiet=this.getAttribute(\\\"quiet\\\",false);this.undefined=this.getAttribute(\\\"undefined\\\");this.library=this.getAttribute(\\\"lib\\\");this.makeChildWidgets([{type:\\\"element\\\",tag:\\\"div\\\",children:this.parseTreeNode.children}])};r.prototype.refresh=function(e){if(this.refreshChildren(e)){this.refreshSelf();return true}return false};exports.eval=r})();\",\n            \"type\": \"application/javascript\",\n            \"module-type\": \"widget\"\n        },\n        \"$:/plugins/tobibeer/eval/wiki.js\": {\n            \"title\": \"$:/plugins/tobibeer/eval/wiki.js\",\n            \"text\": \"/*\\\\\\r\\ntitle: $:/plugins/tobibeer/eval/wiki.js\\r\\ntype: application/javascript\\r\\nmodule-type: wikimethod\\r\\n\\r\\nProvides parsing for filter-like references.\\r\\n\\r\\n@preserve\\r\\n\\\\*/\\n(function(){\\\"use strict\\\";exports.parseExpression=function(e,s){if(!s){s={}}s.vars=s.vars||{};var r=this;if(s.references){e=r.parseExpressionReferences(e,s)}$tw.utils.each(Object.keys(s.vars),function(r){var n=new RegExp(\\\"\\\\\\\\b\\\"+r+\\\"\\\\\\\\b\\\",\\\"mg\\\");e=e.replace(n,s.vars[r])});return e};exports.parseExpressionReferences=function(e,s,r){var n,i,t,a,f,c,u,d,l=\\\"\\\",p=1,g=0,o=this;r=r===undefined?0:r++;if(r===7){throw\\\"max stack level reached\\\"}else{r++;p=e}do{a=u=undefined;t=e.substring(g).search(/[\\\\{<]{2}[^\\\\s]+/);if(t<0){l+=e.substr(g);g=e.length}else{t+=g;n=e.charAt(t);l+=e.substring(g,t);g=t+2;switch(n){case\\\"{\\\":a=true;t=e.indexOf(\\\"}}\\\",g);break;case\\\"<\\\":u=true;t=e.indexOf(\\\">>\\\",g);break}if((a||u)&&t===-1){throw\\\"Missing closing bracket in expression\\\"}else{i=[];d=e.substring(g,t);g=t+2;d=d.split(\\\";\\\");if(d.length>2){i=d[2].split(\\\",\\\")}c=d[1]===undefined?0:d[1];d=d[0];f=a?o.getTextReference(d,\\\"\\\",s.tiddler):s.widget?s.widget.getVariable(d):\\\"\\\";if(i.length){f=i[2]?f.split(i[2])[0]:f.substr(i[0]===undefined?0:parseInt(i[0]),i[1]===undefined?i[1]:parseInt(i[1]))}if(f===\\\"\\\"||f===undefined){f=c}l+=f}}}while(g<e.length);if(l!=p){l=o.parseExpressionReferences(l,s,r)}return l}})();\",\n            \"type\": \"application/javascript\",\n            \"module-type\": \"wikimethod\"\n        }\n    }\n}"
}