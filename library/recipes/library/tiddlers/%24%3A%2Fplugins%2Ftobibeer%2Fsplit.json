{
    "title": "$:/plugins/tobibeer/split",
    "description": "A filter to split input titles and slice-up the results",
    "author": "Tobias Beer",
    "version": "0.7.0",
    "core-version": ">=5.1.9",
    "source": "https://github.com/tobibeer/tw5-split",
    "documentation": "https://tobibeer.github.io/tw5-split",
    "plugin-type": "plugin",
    "dependents": "",
    "list": "readme",
    "type": "application/json",
    "text": "{\n    \"tiddlers\": {\n        \"$:/plugins/tobibeer/split/filter.js\": {\n            \"text\": \"/*\\\\\\r\\ntitle: $:/plugins/tobibeer/split/filter.js\\r\\ntype: application/javascript\\r\\nmodule-type: filteroperator\\r\\n\\r\\nFilter operator that splits each item at a specified separator.\\r\\n\\r\\n@preserve\\r\\n\\\\*/\\n(function(){\\\"use strict\\\";exports.split=function(s,t,i){var e,a=i.wiki,n=t.suffix||\\\"\\\",f=[],r=[],l=[],u=[],p={negate:t.prefix===\\\"!\\\",split:t.operand,prefix:\\\"\\\",suffix:\\\"\\\",num:1,$num:1},o=[[/^\\\\s+/,function(){}],[/^(num|pos|\\\\$num|\\\\$pos)=(n|-n|\\\\d+|-\\\\d+)(?:\\\\s|$)/i,function(s){p[s[1]]=s[2];if(s[1].charAt(0)===\\\"$\\\"){p.mode=\\\"$pos\\\"}if(s[1]===\\\"$num\\\"&&!p.$pos){p.$pos=1}if(s[1]===\\\"num\\\"&&!p.pos){p.pos=1}}],[/^(\\\\+|at|first|!first|last|!last|list|keep|strict|\\\\$strict|trim|unique)(?:\\\\s|$)/i,function(s){var t=s[1];p[t]=1;switch(t){case\\\"+\\\":p.suffix=p.split;break;case\\\"at\\\":p.at=parseInt(p.split);if(isNaN(p.at)){throw\\\"suffix 'at' must be a number: \\\"+p.at}else{p.at=p.at-1}break;case\\\"list\\\":p.list=\\\"list\\\";break;case\\\"first\\\":p.pos=1;break;case\\\"!first\\\":p.pos=2;p.num=\\\"n\\\";break;case\\\"last\\\":p.pos=\\\"n\\\";break;case\\\"!last\\\":p.pos=\\\"-2\\\";p.num=\\\"-n\\\";break}}],[/^list\\\\=\\\\s*([^\\\\s]+)(?:\\\\s|$)/i,function(s){p.list=s[1]}],[/^(\\\\!)?(\\\\$|\\\\$all|\\\\$first|\\\\$last)(?:\\\\s|$)/i,function(s){var t=s[2];p.mode=t;p.neg=s[1]?1:0;if(t===\\\"$first\\\"){if(p.neg){p.$pos=2;p.$num=\\\"n\\\"}else{p.$pos=1}}else if(t===\\\"$last\\\"){if(p.neg){p.$pos=\\\"-2\\\";p.$num=\\\"-n\\\"}else{p.$pos=\\\"n\\\"}}}],[/^(?:\\\\+\\\\\\\\([^\\\\\\\\]+)\\\\\\\\|\\\\\\\\([^\\\\\\\\]+)\\\\\\\\\\\\+)/,function(s){if(s[1]){p.prefix=s[1]}else{p.suffix=s[2]}}]];try{while(n){e=n;$tw.utils.each(o,function(s){var t=s[0].exec(n);if(t){s[1].call(this,t);n=n.substr(t[0].length);return false}});if(n===e){throw\\\"invalid suffix(es) '\\\"+n+\\\"'\\\"}}if(p.list&&p.split){u=$tw.utils.parseStringArray(p.split)}else{s(function(s,t){var i,e,n;r.push(t);if(p.at){n=[t.substr(0,p.at)];e=t.substr(p.at);if(e){n.push(e)}}else if(p.list){n=a.getTiddlerList(t,p.list)}else{n=t.split(p.split)}i=n.length>1||p.list;if(p.pos){n=$tw.utils.getArrayItems(n,p.pos,p.num,p.strict)}if(n.length&&(i||p.keep)){f.push(t);$tw.utils.each(n,function(s){if(p.trim){s=s.trim()}if(s){if(!p.unique||p.unique&&u.indexOf(s)<0){u.push(p.prefix+s+p.suffix)}}})}else{l.push(t)}})}if(t.suffix){switch(p.mode){case\\\"$\\\":u=f;break;case\\\"$all\\\":if(u.length){if(p.negate){l=[]}else{u=r}}else if(p.negate){l=r}break;case\\\"$first\\\":case\\\"$last\\\":case\\\"$pos\\\":u=$tw.utils.getArrayItems(u,p.$pos,p.$num,p.$strict);break}}}catch($){return[\\\"split syntax error:\\\"+$]}return p.negate?l:u}})();\",\n            \"title\": \"$:/plugins/tobibeer/split/filter.js\",\n            \"type\": \"application/javascript\",\n            \"module-type\": \"filteroperator\"\n        },\n        \"$:/plugins/tobibeer/split/readme\": {\n            \"title\": \"$:/plugins/tobibeer/split/readme\",\n            \"text\": \"Provides the filter `split[by]`, splitting input titles `by` a string defined in the operand, allowing you to slice and dice output elements as needed.\\n\\n; suffixes\\r\\n: `$` — return input titles that yield split items\\r\\n: `$all` — return all input titles if any yield split items\\r\\n: `+` — append operand to split titles\\r\\n: `+\\\\x\\\\` — append x to split titles\\r\\n: `\\\\x\\\\+` — prepend x to split titles\\r\\n: `unique` — prevents duplicate titles in the output\\r\\n: `trim` — no leading/trailing blanks in split titles\\r\\n: `first` — first title of the split => `!first` — all but first\\r\\n: `last` — last title of the split => `!last` — all but last\\r\\n: `at` — split in two at number in the operand\\r\\n: `pos=2` — 2nd split item of each input title in turn\\r\\n: `pos=1 num=3` — first three each\\r\\n: `pos=2 num=n` — 2nd to last each\\r\\n: `pos=-2 num=-n` — first to 2nd last each\\r\\n: `strict` — specified `num` is mandatory\\r\\n: `$pos`, `$num`, `$strict`, `$first`, `$!first`,`$last`, `$!last` — for final list\\r\\n: `keep` — return title even if not split\\r\\n: `list[]` — parse list field of input titles\\r\\n: `list=tags[]` — parse tags field of input titles\\r\\n: `list<foo>` — parse (soft) operand as list, e.g. variables or text-references\\n\\n<br>\\n\\n; documentation / examples / demos...\\r\\n: http://tobibeer.github.io/tw5-plugins#split\"\n        },\n        \"$:/plugins/tobibeer/split/utils.js\": {\n            \"text\": \"/*\\\\\\r\\ntitle: $:/plugins/tobibeer/split/utils.js\\r\\ntype: application/javascript\\r\\nmodule-type: utils\\r\\n\\r\\n@preserve\\r\\n\\\\*/\\n(function(){\\\"use strict\\\";exports.getArrayItems=function(e,t,n,s){var i,a=parseInt(n),f=parseInt(t),r=e.length;if(t===\\\"n\\\"){f=r}else if(t===\\\"-n\\\"){f=1}else if(!t){f=1}if(n===\\\"n\\\"){a=r}else if(n===\\\"-n\\\"){a=-(f<0?r+f+1:f)}else if(!n){a=1}f=Math.max(1,f<0?r+f+(a<0?a+2:1):a<0?f+a+1:f);a=Math.max(1,Math.abs(a));i=e.splice(f-1,a);if(i.length<a&&s){i=[]}return i}})();\",\n            \"title\": \"$:/plugins/tobibeer/split/utils.js\",\n            \"type\": \"application/javascript\",\n            \"module-type\": \"utils\"\n        }\n    }\n}"
}